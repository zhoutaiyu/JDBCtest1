<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rollBook.mapper.ScoreMapper" >
  <resultMap id="BaseResultMap" type="com.rollBook.po.Score" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="BIGINT" />
    <result column="absent" property="absent" jdbcType="INTEGER" />
    <result column="early" property="early" jdbcType="INTEGER" />
    <result column="late" property="late" jdbcType="INTEGER" />
    <result column="play" property="play" jdbcType="INTEGER" />
    <result column="assignment" property="assignment" jdbcType="INTEGER" />
    <result column="experiment" property="experiment" jdbcType="INTEGER" />
    <result column="quiz" property="quiz" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="mod_time" property="modTime" jdbcType="TIMESTAMP" />
    <result column="is_del" property="isDel" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tid, absent, early, late, play, assignment, experiment, quiz, total, create_time, 
    mod_time, is_del
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rollBook.po.ScoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rollBook.po.ScoreExample" >
    delete from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rollBook.po.Score" >
    insert into score (id, tid, absent, 
      early, late, play, 
      assignment, experiment, quiz, 
      total, create_time, mod_time, 
      is_del)
    values (#{id,jdbcType=INTEGER}, #{tid,jdbcType=BIGINT}, #{absent,jdbcType=INTEGER}, 
      #{early,jdbcType=INTEGER}, #{late,jdbcType=INTEGER}, #{play,jdbcType=INTEGER}, 
      #{assignment,jdbcType=INTEGER}, #{experiment,jdbcType=INTEGER}, #{quiz,jdbcType=INTEGER}, 
      #{total,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modTime,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.rollBook.po.Score" >
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="absent != null" >
        absent,
      </if>
      <if test="early != null" >
        early,
      </if>
      <if test="late != null" >
        late,
      </if>
      <if test="play != null" >
        play,
      </if>
      <if test="assignment != null" >
        assignment,
      </if>
      <if test="experiment != null" >
        experiment,
      </if>
      <if test="quiz != null" >
        quiz,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modTime != null" >
        mod_time,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=BIGINT},
      </if>
      <if test="absent != null" >
        #{absent,jdbcType=INTEGER},
      </if>
      <if test="early != null" >
        #{early,jdbcType=INTEGER},
      </if>
      <if test="late != null" >
        #{late,jdbcType=INTEGER},
      </if>
      <if test="play != null" >
        #{play,jdbcType=INTEGER},
      </if>
      <if test="assignment != null" >
        #{assignment,jdbcType=INTEGER},
      </if>
      <if test="experiment != null" >
        #{experiment,jdbcType=INTEGER},
      </if>
      <if test="quiz != null" >
        #{quiz,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modTime != null" >
        #{modTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rollBook.po.ScoreExample" resultType="java.lang.Integer" >
    select count(*) from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update score
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=BIGINT},
      </if>
      <if test="record.absent != null" >
        absent = #{record.absent,jdbcType=INTEGER},
      </if>
      <if test="record.early != null" >
        early = #{record.early,jdbcType=INTEGER},
      </if>
      <if test="record.late != null" >
        late = #{record.late,jdbcType=INTEGER},
      </if>
      <if test="record.play != null" >
        play = #{record.play,jdbcType=INTEGER},
      </if>
      <if test="record.assignment != null" >
        assignment = #{record.assignment,jdbcType=INTEGER},
      </if>
      <if test="record.experiment != null" >
        experiment = #{record.experiment,jdbcType=INTEGER},
      </if>
      <if test="record.quiz != null" >
        quiz = #{record.quiz,jdbcType=INTEGER},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modTime != null" >
        mod_time = #{record.modTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update score
    set id = #{record.id,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=BIGINT},
      absent = #{record.absent,jdbcType=INTEGER},
      early = #{record.early,jdbcType=INTEGER},
      late = #{record.late,jdbcType=INTEGER},
      play = #{record.play,jdbcType=INTEGER},
      assignment = #{record.assignment,jdbcType=INTEGER},
      experiment = #{record.experiment,jdbcType=INTEGER},
      quiz = #{record.quiz,jdbcType=INTEGER},
      total = #{record.total,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      mod_time = #{record.modTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rollBook.po.Score" >
    update score
    <set >
      <if test="tid != null" >
        tid = #{tid,jdbcType=BIGINT},
      </if>
      <if test="absent != null" >
        absent = #{absent,jdbcType=INTEGER},
      </if>
      <if test="early != null" >
        early = #{early,jdbcType=INTEGER},
      </if>
      <if test="late != null" >
        late = #{late,jdbcType=INTEGER},
      </if>
      <if test="play != null" >
        play = #{play,jdbcType=INTEGER},
      </if>
      <if test="assignment != null" >
        assignment = #{assignment,jdbcType=INTEGER},
      </if>
      <if test="experiment != null" >
        experiment = #{experiment,jdbcType=INTEGER},
      </if>
      <if test="quiz != null" >
        quiz = #{quiz,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modTime != null" >
        mod_time = #{modTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rollBook.po.Score" >
    update score
    set tid = #{tid,jdbcType=BIGINT},
      absent = #{absent,jdbcType=INTEGER},
      early = #{early,jdbcType=INTEGER},
      late = #{late,jdbcType=INTEGER},
      play = #{play,jdbcType=INTEGER},
      assignment = #{assignment,jdbcType=INTEGER},
      experiment = #{experiment,jdbcType=INTEGER},
      quiz = #{quiz,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      mod_time = #{modTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>